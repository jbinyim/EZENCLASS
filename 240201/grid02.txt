SCSS
1. Nesting : 중첩가능
- 동일한 부모 선택자를 반복적으로 사용 하지 않을 수 있는 효율성

2. 부모요소를 찾아오는 방법 : &
=> 전,후 문자 선택자
=> css/scss

*html & css를 활용한 프로젝트를 작업
>박스구조화 / class 값을 작명 => 상위에서 하위로 내려오면서 유사한 패턴

* flex / grid / float
> 혼용해서 사용해도 문제가 하나도 없는데 실제 예무에서는 사용하지 않음

*현대의 ui 스타일 => 컴포넌트 스타일 시스템 => 하나의 템플릿 양식 => 상황에 따라서 가져다가 사용 => 디자인의 효율성

*내가 만약 scss를 프로젝트 스타일 => a~z 까지 다 scss


JS : 연산자
- 산술연산자 : + - * / , % (피연사자간 나누기를 한 이후에 나머지값을 찾아 올떄)
- 비교연산자 : A, B (> < <= >= != =)
- 논리연산자 : true, false

함수: 어떤 구현하고자 하는 기능들을 한데 모아놓은 집합소
-> 형태: 함수이름() : functionA(매게변수, 매게변수, 매게변수)
=> 기능을 실행

변수 / @mixin / @include / @extend

JS: map / set 내장함수
> SCSS - map / get

if: / else:
>css는 사용 불가
> scss에서 조건문 값을 적용!!!
if(조거문 => true) {
	실행문
}



