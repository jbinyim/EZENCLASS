리액트 : 컴포넌트 기반으로 작동
> 각 조원들이 작업한 페이지를 컴포넌트화 연결

*Route = 라우트
- 경로


* UI작업을 진행함에 있어서
- Page Routing

* 기존 웹 페이지에서의 Page Routing 어떤 방법으로 이뤄졌을까?

*SSR: Server Side Rendering
*MPA: Multi Page Applicaation

*CSR: Client Side Rendering
*SPA: Single Page Application

// 설치 //
npm i react-router-dom

Page Routing 기능 구현
=> 메인이 되는 컴포넌트에서 일종의 스위치를 설치!!

동적 라우팅 구현!!

1. index.js
- 메인 컴포넌트에 페이지 라우팅 기능을 구현하고자 하는 컴포넌트를 찾아서 BrowserRouter 설정

2. App.js
- Routes & Route => 페이지 분기 작업!!
- Route : path & element
- path : 경로 => 상단 주소창의 경로 정의 
- element : 보여울 컴포넌트 소스

switch

page Rounting을 설정할 때, URL Partmeter 정의할 수 있음
기본적인 page url 뒤에 "/" 특정정보라는 것을 인식할 수 있는 일종의 변수값

url parmeter 값 뒤에 "?"와 함께 입력되어지는 값을 Query String이라고 부름
query: 질의하다, 질문하다

*파라미터를 사용할 때: 
- 특정 섹션 및 카태고리 내 컨텐트를 정리 및 보관하고자 할 때
- 신규로 일기를 작성!! => /diary/1

useParams : 상단 주소창에서 파라미터의 값을 찾아올 떄 사용하는 리액트 훅
useSearchParams : 상단 주소창에서 쿼리스트링의 값을 찾아올떄 사용하는 리액트 훅

form acation = "get"

----------------------------------------------------------------------------------------------------------------
감정 일기장
=> 일기를 작성한 날짜
=> 일기 작성 내용
=> 오늘의 감점(*기분좋음/ 우울함/ 짜증남)

그날 그날 작성한 일기 데이터를 목록화해서 볼 수 있어야 함
목록화 되어 있는 페이지에서는 일기를 삭제할 수 있는 기능

일기장 최신순으로 오랜된순으로 필터링

세부적인 일기장 => 수정기능+

1. 일기장을 작성할 수 있는 페이지
2. 작성된 일기장을 읽을 수 있는 페이지
3. 작성된 여러개의 일기장을 한 눈에 볼 수 있는 목록화 되어진 페이지
4. 작성된 일기장을 수정할 수 있는 페이지

> 만약 내가 작성한 일기가 30개

*컴포넌트는 페이지를 구성하게끔 해주는 요소
*함수 => 컴포넌트가 아닌 컴포넌트 내에서 부분적으로 사용할 수 있는 사용해야 하는 함수기능

* 버튼을 상황에 맞춰서 사용
1) 작성완료
2) 취소하기
3) 뒤로가기
> 색상 / 텍스트 / 기능
> props

1. 공통 컴포넌트
- 버튼
- 해더영역
- 일기 편집 및 새로작성

2.  공통 함수
- 이미지를 불러오는 함수
- 찾아온 이미지를 선택했을 때 기능구현
- 오늘의 날짜 세팅


값이 변경


